# File: /home/$USER/.config/shell/zenvironment
# Author: 4ndr0666
# Edited: 04-10-24
# =====================================// 4ndr0666_ZENVIRONMENT //


# --- // Dynamic_PATH:
all_dirs=(
    "$HOME/.npm-global/bin"
    "$HOME/.cargo/bin"
    "$HOME/.gem/ruby/2.7.0/bin"  # Adjust Ruby version as needed
    "$HOME/.pyenv/bin"
    "$HOME/.pyenv/shims"
    "$HOME/.config/yarn/global/node_modules/.bin"
    "$HOME/.local/share/go/"
    "/usr/local/go/bin"
    "${JAVA_HOME:-/usr/lib/jvm/default/bin}"  # Use JAVA_HOME if set, else default
    "$HOME/.rvm/bin"
    "$HOME/.virtualenvs"
    "$HOME/.poetry/bin"
    "$HOME/bin"
    "$HOME/.local/bin"
    "/opt/bin"
    "/sbin"
    "/usr/sbin"
    "/usr/local/sbin"
    "/usr/bin"
)

# Add additional directories found in specified locations
# Optimized to prevent performance issues by limiting search scope
additional_dirs=($(find ~/.local/bin /Nas/Build/git/syncing/scr/ /usr/local/bin -maxdepth 1 -type d 2>/dev/null))
all_dirs+=("${additional_dirs[@]}")

# Update PATH with all valid directories
for dir in "${all_dirs[@]}"; do
    if [[ -d $dir ]]; then
        PATH="$PATH:$dir"
    fi
done

export PATH

# Ensure unique path elements
typeset -U path PATH cdpath CDPATH fpath FPATH manpath MANPATH

# --- // DEFAULT_PROGRAMS:
#export MICRO_TRUECOLOR=1
#export EDITOR="/usr/bin/micro"
#export TERMINAL="alacritty"
#export TERMINAL_PROG="alacritty"
#export BROWSER="brave-browser-beta"

# --- // XDG Base Directory Configuration:
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CACHE_HOME="$HOME/.cache"

# --- // XDG_RUNTIME_DIR_SETUP:
#if [ -z "$XDG_RUNTIME_DIR" ]; then
#    export XDG_RUNTIME_DIR="/run/user/$(id -u)"
#fi

#if [ ! -d "$XDG_RUNTIME_DIR" ]; then
#    mkdir -p "$XDG_RUNTIME_DIR"
#fi

# --- // XDG_DATA_DIRS_SETUP:
#[ -z "$XDG_DATA_DIRS" ] && export XDG_DATA_DIRS="/usr/local/share:/usr/share"

# Organize history files within XDG directories
export HISTFILE="$XDG_DATA_HOME/zsh/history"
mkdir -p "$(dirname "$HISTFILE")"

# --- // XDG_COMPLIANCE
export XINITRC="$XDG_CONFIG_HOME/x11/xinitrc"
export INPUTRC="$XDG_CONFIG_HOME/shell/inputrc"
export WINEPREFIX="$XDG_DATA_HOME/wineprefixes/default"
mkdir -p "$WINEPREFIX"
export WINEARCH="win32"
export WGETRC="$XDG_CONFIG_HOME/wget/wgetrc"
export PASSWORD_STORE_DIR="$XDG_DATA_HOME/password-store"
export TMUX_TMPDIR="$XDG_RUNTIME_DIR"
export CARGO_HOME="$XDG_DATA_HOME/cargo"
export GOPATH="$XDG_DATA_HOME/go"
export GOMODCACHE="$XDG_CACHE_HOME/go/mod"
export POETRY_CACHE_DIR="$XDG_CACHE_HOME/pypoetry"
export POETRY_VIRTUALENVS_PATH="$POETRY_CACHE_DIR/virtualenvs"
export PYTHONSTARTUP="$XDG_CONFIG_HOME/python/pythonrc"
export PIP_DOWNLOAD_CACHE="$XDG_CACHE_HOME/pip/"
export SQLITE_HISTORY="$XDG_DATA_HOME/sqlite_history"
export SQLITE_HISTORY="$XDG_DATA_HOME/sqlite_history"
#export ruby_version=$(ruby -e 'puts RUBY_VERSION' 2>/dev/null || echo "2.7.0")  # Default to 2.7.0 if Ruby is not installed
# export KODI_DATA="$XDG_DATA_HOME/kodi"
# export NOTMUCH_CONFIG="$XDG_CONFIG_HOME/notmuch-config"
# export ANDROID_SDK_HOME="$XDG_CONFIG_HOME/android"
#export ZDOTDIR="$HOME"/powerlevel10k

# =================================================================== // X11_SPECIFIC //

#export GTK2_RC_FILES="$HOME/.gtkrc-2.0"
# --- OPENBOX:
# export XGD_CURRENT_DESKTOP='openbox'
# export _JAVA_AWT_WM_NONREPARENTING=1
# export OpenGL_GL_PREFERENCE=GLVND  # For screen tearing
# export QT_QPA_PLATFORMTHEME=qt5ct
# export MOZ_USE_XINPUT2=1
# export AWT_TOOLKIT=MToolkit wmname LG3D  # May have to install wmname
# export _JAVA_OPTIONS="-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel -Dswing.crossplatformlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel ${_JAVA_OPTIONS}"

# --- // SETOPT:
#unsetopt PROMPT_SP 2>/dev/null
#setopt append_history
#setopt share_history
#setopt extended_history
#setopt histignorealldups                                        # If a new command is a duplicate, remove the older one
#setopt HIST_FIND_NO_DUPS
#setopt correct                                                  # Auto correct mistakes
#setopt auto_cd
#setopt extended_glob
#setopt nocaseglob                                               # Case insensitive globbing
#setopt no_match
#setopt notify
#setopt longlistjobs
#setopt hash_list_all
#setopt completeinword
#setopt nohup
#setopt auto_pushd
#setopt nobeep
#setopt pushd_ignore_dups
#setopt noglobdots
#setopt noshwordsplit
#setopt rcexpandparam                                            # Array expension with parameters
#setopt nocheckjobs                                              # Don't warn about running processes when exiting
#setopt numericglobsort                                          # Sort filenames numerically when it makes sense
#setopt pushdminus

# --- // AUTOCOMPLETE:
autoload -Uz +X compinit && compinit
autoload -U +X bashcompinit && bashcompinit                 # automatically load bash completion functions
compdef batman=man
#autoload -Uz compinit
#compinit
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'  # Case insensitive tab completion
zstyle ':completion:*' rehash true  # Automatically find new executables in path
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"  # Colored completion (different colors for dirs/files/etc)
zstyle ':completion:*' completer _expand _complete _ignored _approximate
zstyle ':completion:*' menu select
zstyle ':completion:*' select-prompt '%SScrolling active: current selection at %p%s'
zstyle ':completion:*:descriptions' format '%U%F{cyan}%d%f%u'

# --- // SPEED_UP_COMPLETIONS
zstyle ':completion:*' accept-exact '*(N)'
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.cache/zcache
zmodload zsh/complist
_comp_options+=(globdots)
#source <(fzf --zsh)

# Handle terminal mode keybindings
typeset -g -A key

# ===================================================== // LIBRARY_AND_SECURITY //
[ -z "$LD_LIBRARY_PATH" ] && export LD_LIBRARY_PATH="$HOME/.local/lib" || export LD_LIBRARY_PATH="$HOME/.local/lib:/usr/local/lib/python3.11/site-packages:/usr/lib:$LD_LIBRARY_PATH"

export SUDO_ASKPASS="/usr/bin/pinentry-dmenu"
# export XAUTHORITY="$XDG_RUNTIME_DIR/Xauthority"

# --- // GPG:
export GNUPGHOME="$HOME/.gnupg"
mkdir -p "$GNUPGHOME"
chmod 700 "$GNUPGHOME"
#export GPG_TTY="$(tty)"
#gpg-connect-agent updatestartuptty /bye >/dev/null
#gpg-connect-agent reloadagent /bye >/dev/null
#eval $(ssh-agent) && ssh-add 2&>/dev/null

# =============================================== // PAGER //
# Use Bat as MANPAGER with less for pagination
export MANPAGER="sh -c 'col -bx | bat -l man -p | less -R'"

# Configure FZF with Bat preview and custom color schemes
export FZF_DEFAULT_OPTS="
  --layout=reverse
  --height=40%
  --border
  --bind='ctrl-a:select-all,ctrl-d:deselect-all'
  --cycle
  --inline-info
  --tiebreak=index
  --preview='bat --style=numbers --color=always --line-range :500 {}'
  --color=bg+:-1,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
  --color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
  --color=marker:#f5e0dc,fg+:#a6e3a1,prompt:#cba6f7,hl+:#f38ba8"

# Ensure truecolor support
case "${COLORTERM}" in
    truecolor|24bit) ;;  # Already supports truecolor
    *) export COLORTERM="24bit" ;;
esac

# Configure less to use highlight for syntax highlighting
export LESS="R"
export LESS_TERMCAP_mb="$(printf '%b' '')"
export LESS_TERMCAP_md="$(printf '%b' '')"
export LESS_TERMCAP_me="$(printf '%b' '')"
export LESS_TERMCAP_so="$(printf '%b' '')"
export LESS_TERMCAP_se="$(printf '%b' '')"
export LESS_TERMCAP_us="$(printf '%b' '')"
export LESS_TERMCAP_ue="$(printf '%b' '')"
export LESSOPEN="| /usr/bin/highlight -O ansi %s 2>/dev/null"

# Enable Mozilla XInput2 for better input handling
export MOZ_USE_XINPUT2=1

# Optional: Configure AWT_TOOLKIT for Java applications (Uncomment if needed)
# export AWT_TOOLKIT="MToolkit wmname LG3D"

# =============================================== // MISC //

# --- // SPEEDUP KEYS:
#command -v xset &>/dev/null && xset r rate 300 50 || echo "xset command not found, skipping keyboard rate configuration."
#xset r rate 300 50

# --- // LF_SHORTCUTS:
[ ! -f "$XDG_CONFIG_HOME/shell/shortcutrc" ] && setsid -f shortcuts >/dev/null 2>&1





