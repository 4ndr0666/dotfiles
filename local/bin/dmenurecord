#!/bin/sh

# Enhanced Wayland Recording Script with Waybar Integration
# Usage:
# `$0`: Ask for recording type via dmenu
# `$0 screencast`: Record both audio and screen
# `$0 video`: Record only screen
# `$0 audio`: Record only audio
# `$0 kill`: Kill existing recording
#
# If there is already a running instance, the user will be prompted to end it.

# Function to update the status bar icon
updateicon() {
    echo "$1" > /tmp/recordingicon
    pkill -SIGRTMIN+1 waybar
}

# Function to terminate a running recording
killrecording() {
    if [ -f /tmp/recordingpid ]; then
        recpid="$(cat /tmp/recordingpid)"
        kill -15 "$recpid"
        rm -f /tmp/recordingpid
        updateicon ""
        pkill -SIGRTMIN+1 waybar
        notify-send "Recording stopped"
    else
        notify-send "No active recording to stop."
    fi
}

# Function to start a screencast recording with audio
screencast() {
    notify-send "Recording started" "Recording screencast with audio."
    wf-recorder \
    -f "$HOME/screencast-$(date '+%y%m%d-%H%M-%S')-$(date +%N).mp4" \
    -a &
    if [ $? -eq 0 ]; then
        echo $! > /tmp/recordingpid
        updateicon "‚è∫Ô∏èüéôÔ∏è"
    else
        notify-send "Recording failed to start."
    fi
}

# Function to start a video-only recording
video() {
    notify-send "Recording started" "Recording video."
    wf-recorder \
    -f "$HOME/video-$(date '+%y%m%d-%H%M-%S')-$(date +%N).mp4" &
    if [ $? -eq 0 ]; then
        echo $! > /tmp/recordingpid
        updateicon "‚è∫Ô∏è"
    else
        notify-send "Recording failed to start."
    fi
}

# Function to start a high-definition webcam recording
webcamhidef() {
    notify-send "Recording started" "Recording hi-def webcam video."
    wf-recorder \
    --muxer=v4l2 \
    --geometry=1920x1080 \
    -f "$HOME/webcam-$(date '+%y%m%d-%H%M-%S')-$(date +%N).mp4" &
    if [ $? -eq 0 ]; then
        echo $! > /tmp/recordingpid
        updateicon "üé•"
    else
        notify-send "Recording failed to start."
    fi
}

# Function to start a standard webcam recording
webcam() {
    notify-send "Recording started" "Recording webcam video."
    wf-recorder \
    --muxer=v4l2 \
    --geometry=640x480 \
    -f "$HOME/webcam-$(date '+%y%m%d-%H%M-%S')-$(date +%N).mp4" &
    if [ $? -eq 0 ]; then
        echo $! > /tmp/recordingpid
        updateicon "üé•"
    else
        notify-send "Recording failed to start."
    fi
}

# Function to start an audio-only recording
audio() {
    notify-send "Recording started" "Recording audio."
    ffmpeg \
    -f alsa -i default \
    -c:a flac \
    "$HOME/audio-$(date '+%y%m%d-%H%M-%S')-$(date +%N).flac" &
    if [ $? -eq 0 ]; then
        echo $! > /tmp/recordingpid
        updateicon "üéôÔ∏è"
    else
        notify-send "Audio recording failed to start."
    fi
}

# Function to prompt the user for the type of recording via dmenu
askrecording() {
    choice=$(printf "screencast\\nvideo\\nvideo selected\\naudio\\nwebcam\\nwebcam (hi-def)" | dmenu -i -p "Select recording style:")
    if [ -z "$choice" ]; then
        notify-send "No recording type selected. Exiting."
        exit 1
    fi
    case "$choice" in
        screencast) screencast;;
        audio) audio;;
        video) video;;
        *selected) videoselected;;
        webcam) webcam;;
        "webcam (hi-def)") webcamhidef;;
    esac
}

# Function to prompt the user to end an active recording
asktoend() {
    response=$(printf "No\\nYes" | dmenu -i -p "Recording still active. End recording?") &&
    [ "$response" = "Yes" ] &&  killrecording
}

# Function to start a video recording of a selected area
videoselected() {
    slop -f "%x %y %w %h" > /tmp/slop
    read -r X Y W H < /tmp/slop
    rm /tmp/slop

    notify-send "Recording started" "Recording selected area."
    wf-recorder \
    -g "$W"x"$H"+"$X","$Y" \
    -f "$HOME/box-$(date '+%y%m%d-%H%M-%S')-$(date +%N).mp4" &
    if [ $? -eq 0 ]; then
        echo $! > /tmp/recordingpid
        updateicon "‚è∫Ô∏è"
    else
        notify-send "Recording failed to start."
    fi
}

# Main execution logic
case "$1" in
    screencast) screencast;;
    audio) audio;;
    video) video;;
    *selected) videoselected;;
    kill) killrecording;;
    *) ([ -f /tmp/recordingpid ] && asktoend && exit) || askrecording;;
esac
