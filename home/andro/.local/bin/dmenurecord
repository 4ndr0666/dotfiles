#!/bin/sh

# Usage:
# `$0`: Ask for recording type via dmenu
# `$0 screencast`: Record both audio and screen
# `$0 video`: Record only screen
# `$0 audio`: Record only audio
# `$0 kill`: Kill existing recording
#
# If there is already a running instance, user will be prompted to end it.

getdim() { xrandr | grep -oP '(?<=current ).*(?=,)' | tr -d ' ' ;}

updateicon() { \
    echo "$1" > /tmp/recordingicon
    pkill -RTMIN+9 "${notify-send ""}" 
}

killrecording() {
    recpid="$(cat /tmp/recordingpid)"
    kill -15 "$recpid"
    rm -f /tmp/recordingpid
    updateicon ""
    pkill -RTMIN+9 "${notify-send "Recording stopped}"
}

screencast() { \
    wf-recorder \
    -f "$HOME/screencast-$(date '+%y%m%d-%H%M-%S')-$(date +%N).mp4" -a &
    echo $! > /tmp/recordingpid
    updateicon "‚è∫Ô∏èüéôÔ∏è"
}

video() { wf-recorder \
    -f "$HOME/video-$(date '+%y%m%d-%H%M-%S')-$(date +%N).mkv" &
    echo $! > /tmp/recordingpid
    updateicon "‚è∫Ô∏è"
}

webcamhidef() { wf-recorder \
    --muxer=v4l2 \
    --geometry=1920x1080 \
    -f "$HOME/webcam-$(date '+%y%m%d-%H%M-%S')-$(date +%N).mkv" &
    echo $! > /tmp/recordingpid
    updateicon "üé•"
}

webcam() { wf-recorder \
    --muxer=v4l2 \
    --geometry=640x480 \
    -f "$HOME/webcam-$(date '+%y%m%d-%H%M-%S')-$(date +%N).mkv" &
    echo $! > /tmp/recordingpid
    updateicon "üé•"
}

audio() { \
    ffmpeg \
    -f alsa -i default \
    -c:a flac \
    "$HOME/audio-$(date '+%y%m%d-%H%M-%S')-$(date +%N).flac" &
    echo $! > /tmp/recordingpid
    updateicon "üéôÔ∏è"
}

askrecording() { \
    choice=$(printf "screencast\\nvideo\\nselected area\\naudio\\nwebcam\\nwebcam (hi-def)" | dmenu -i -p "Select recording style:") 
    case "$choice" in
        screencast) screencast;;
        audio) audio;;
        video) video;;
        *selected) videoselected;;
        webcam) webcam;;
        "webcam (hi-def)") webcamhidef;;
    esac
}

asktoend() {
    response=$(printf "No\\nYes" | dmenu -i -p "Recording still active. End recording?") &&
    [ "$response" = "Yes" ] && killrecording 
    }

videoselected() 
{
    slop_output=$(slop -f "%x %y %w %h")
    IFS=' ' read -r X Y W H <<< "$slop_output"

    wf-recorder \
    -g "${X},${Y} ${W}x${H}" \
    -f "$HOME/box-$(date '+%y%m%d-%H%M-%S')-$(date +%N).mkv" &
    echo $! > /tmp/recordingpid
    updateicon "‚è∫Ô∏è"
}

case "$1" in
	screencast) screencast;;
	audio) audio;;
	video) video;;
        *selected) videoselected;;
	kill) killrecording;;
	*) ([ -f /tmp/recordingpid ] && asktoend && exit) || askrecording;;
esac
