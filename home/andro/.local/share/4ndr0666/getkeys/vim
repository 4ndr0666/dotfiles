# Neovim Keybindings

A `<leader>` key precedes certain cmds. That key must be pressed along with said cmd.
In order to set the `<leader>` key use:
```shell
let mapleader=","
```

---

## Basic Movement

  - Right: `l`
  - Left: `h`
  - Up: `k`
  - Down: `j`

**Line Navigation**:
  - Start of the line: `0`
  - End of line: `$`
  - First line: `gg`
  - Last line: `G`
  - Go to line number: `<number>G`

**Insert Mode**:
  - At cursor: `i`
  - After cursor: `a`
  - Below cursor: `o` **New Line**

## Deletion

  - All words **around** a character: `daw`
    *Example:
    ```plaintext
    Here is some
    "txt to delete"
    for example.
    ```
    `:daw"`
    ```plaintext
    "txt to delete"
    ```

  - All words **inside** of a character. `diw`
    *Example:
    ```plaintext
    Here is some
    "txt to delete"
    for example.
    ```
    `:diw"`
    ```plaintext
    Here is some
    ""
    for example.
    ```

  - To the **end** of a character: `dw`
    *Example:
    ```plaintext
    Here is `$`some text for example
    with the cursor as a dollar sign.
    ```
    :dw
    ```plaintext
    Here is `$` text for example
    with the cursor as a dollar sign.
    ```

=================================================
  -  `dd` (line), `c` - Delete without copying
- **Copy/Paste**: `yy` (copy line), `p` (paste after)
- **Cut/Paste Line**: `ddp`
- **Undo/Redo**: `u` (undo), `Ctrl + r` (redo)
- **Visual Mode**:
  - Character: `v`
  - Line: `V`
  - Block: `Ctrl + v`

### Text Manipulation

- **Inside Text Objects**: `di"` (delete inside quotes), `yi(` (yank inside parentheses)
- **Indentation**:
  - `=` - Auto-indent line
  - `gg=G` - Indent entire document
- **Replace**:
  - `:%s/old/new/g` - Replace in entire document
  - `:s/old/new/g` - Replace in current line
- **Spell Check**:
  - Enable: `:set spell`
  - Disable: `:set nospell`
- **Help**: `:help <cmd>`

### Scrolling and View

- **Scrolling**:
  - `Ctrl + u` - Up half screen
  - `Ctrl + d` - Down half screen
  - `H`, `M`, `L` - Move to top, middle, or bottom third of screen

---

## Command Bar (Ex Commands)

### File Operations

- **Save and Quit**:
  - `:wq` - Save changes and quit
  - `:q!` - Quit without saving changes
  - `:w <filename>` - Save as <filename>
  - `:e <filename>` - Open file
  - **Save with sudo**: `:w!!`

### Window and Tab Management

- **Window Splits**:
  - Horizontal: `:split`
  - Vertical: `:vsplit`
  - **Navigate Splits**: `<C-h/j/k/l>`
- **Tabs**:
  - New: `:tabnew <file>`
  - Close: `:tabclose`
  - Next/Previous: `:tabnext` / `:tabprev`

### Buffer Management

- **Buffers**:
  - Close: `:bd`
  - List: `:buffers`
  - Next/Previous: `:bnext` / `:bprev`

---

## Shell and System Commands

- **Execute Commands in Insert Mode**: `Ctrl + o <cmd>`
- **Open Bibliography**: `:vsp $BIB`
- **Open References**: `:vsp $REFER`
- **Run Shellcheck**: `,s` on the current file

---

## General Key Mappings

- **Quick Insert `<++>`**: `,,`
- **Replace All in File**: `S` (`:%s//g`)
- **Compile File**: `,c` (LaTeX, Groff, etc.)
- **Open Output File**: `,p` (e.g., PDF, HTML)

---

## Plugin Management (vim-plug)

### vim-plug Commands

- **Install**: `:PlugInstall`
- **Update**: `:PlugUpdate`
- **Clean**: `:PlugClean`
- **Status**: `:PlugStatus`

### Example Plugins

```vim
call plug#begin('~/.vim/plugged')
Plug 'preservim/nerdtree'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'vim-airline/vim-airline'
Plug 'Valloric/YouCompleteMe'
Plug 'vim-syntastic/syntastic'
Plug 'itchyny/lightline.vim'
call plug#end()
```

---

## Key Plugins and Mappings

- **vim-surround**: `ysiw)` - Surround word with `()`, `cs"'` - Change `"` to `'`, `ds"` - Delete `"`
- **NERDTree**: `,n` - Toggle, `o` - Open, `t` - New tab, `I` - Hidden files, `m` - Menu
- **vim-commentary**: `gcc` - Comment line, `gc` - Comment motion
- **ALE**: `:ALEFix` - Fix, `:ALELint` - Lint
- **vim-mucomplete**: `<Tab>` - Keyword completion
- **nvim-lspconfig**:
  - **clangd**: C/C++
  - **pyright** (optional): Python
- **nvim-cmp**: `<Tab>` - Next, `<S-Tab>` - Previous, `<CR>` - Confirm
- **nightfox.nvim**: `colorscheme nightfox`

---

## Vimwiki Customization

- **Markdown Support**: `.md`, `.Rmd`, `.markdown`
- **Purpose**: Notes, todo lists, personal knowledge bases
- **Open Vimwiki Index**: `,v`

---

## Options

### Indentation and Tabs

- **Indentation**:
  - `autoindent` - Auto-indent lines
  - `tabstop=4` - Tab width
  - `shiftwidth=4` - Indent width
  - `expandtab` - Use spaces instead of tabs

### Line Numbers

- **Absolute**: `number`
- **Relative**: `relativenumber`

### Search and Highlight

- **Search**:
  - `hlsearch` - Highlight matches
  - `incsearch` - Show matches as you type
  - **Case Sensitivity**:
    - `ignorecase` - Case-insensitive
    - `smartcase` - Case-sensitive if uppercase in search

### Appearance

- **Syntax Highlighting**: `syntax on`
- **Mouse Support**: `mouse=a`
- **Line Wrapping**:
  - Enable: `wrap`
  - Disable: `nowrap`

---

## Custom Keybindings

- **Quick Save**: `nnoremap <leader>w :w<CR>`
- **Quick Quit**: `nnoremap <leader>q :q<CR>`
- **Toggle NERDTree**: `nnoremap <leader>n :NERDTreeToggle<CR>`
- **Window Navigation**:
  ```vim
  nnoremap <C-h> <C-w>h
  nnoremap <C-j> <C-w>j
  nnoremap <C-k> <C-w>k
  nnoremap <C-l> <C-w>l
  ```
- **Visual Mode Paste**: `vnoremap p "_dP`

---

## File Management

- **Trailing Whitespace**: Removes on save
- **Trailing Newline for C Files**: Adds automatically
- **Email Signature Handling**: Supports `neomutt`

---

## Autocommands

- **Disable Auto-commenting**: On new line creation
- **File Type Detection**: Markdown, Groff, LaTeX, Vimwiki

---

## Multi-cursor Support

Vim lacks native multi-cursor support, but plugins like [vim-visual-multi](https://github.com/mg979/vim-visual-multi) provide it:
  - `<C-n>` - Next occurrence
  - `<C-p>` - Previous occurrence
  - `<C-x>` - Remove selection

---

## ==================================== / CMD TABLES //

| **Command**                 | **Description**                            |
|-----------------------------|--------------------------------------------|
| `:PlugInstall`              | Install plugins                            |
| `ysiw)`                     | Surround word with `()`                    |
| `,n`                        | Toggle NERDTree                            |
| `gcc`                       | Comment out line                           |
| `:ALEFix`                   | Fix linting issues                         |
| `:Vimagit`                  | Open Git interface                         |
| `<C-h/j/k/l>`               | Move between splits                        |
| `:w!!`                      | Save with sudo privileges                  |

---

## Resources

- **Neovim Documentation**: [Neovim Help](https://neovim.io/doc/)
- **Vim Documentation**: [Vim Help](https://vimhelp.org/)
