#!/usr/bin/env bash
# Author: 4ndr0666
#======================== // PLAYDIR //
## Description: No file is made, instead process substitution
#              send the playlist directly to mpv. Only media
#              files are selected through filtering and I/O 
#              overhead is avoided by not creating a temp file.
# Usage: playdir <path> [<image-duration-seconds>]
# ---------------------------------------------------------

playdir() {
    local target duration mpv_opts find_cmd
    # 1) Validate arguments
    if [[ -z "$1" ]]; then
        echo "Usage: ${FUNCNAME[0]} <file|directory> [image-duration]" >&2
        return 1
    fi
    # 2) Resolve directory
    if [[ -d "$1" ]]; then
        target="$1"
    else
        target="$(dirname "$1")"
    fi
    cd "$target" || return 1
    # 3) Duration parameter (default: 5 seconds)
    duration="${2:-5}"

    # 4) mpv options
    mpv_opts=(
        --profile=playdir
#        --wayland-configure-bounds=yes
#        --start=50%
        "$duration"
    )

    # 5) Build playlist via find (maxdepth 3)
    find_cmd=( find "$(pwd)" -maxdepth 3 -type f \( \
        -iname '*.mp4' -o -iname '*.wmv' -o -iname '*.mkv' -o \
        -iname '*.avi' -o -iname '*.mov' -o -iname '*.mpeg' -o \
        -iname '*.ts'  -o -iname '*.3gp' -o -iname '*.gif' -o \
        -iname '*.png' -o -iname '*.jpg' -o -iname '*.jpeg' -o \
        -iname '*.3gp'\) -print )

    # 6) Invoke mpv with process substitution
    mpv "${mpv_opts[@]}" --playlist=<( "${find_cmd[@]}" )
}

# If the script is called directly, run playdir with all args
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    playdir "$@"
fi
