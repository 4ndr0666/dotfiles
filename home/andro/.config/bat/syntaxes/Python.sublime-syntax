%YAML 1.2
---
name: Python
file_extensions:
  - py
scope: source.python
contexts:
  main:
    - include: comments
    - include: strings
    - include: keywords
    - include: functions
    - include: classes
    - include: numbers
    - include: operators
    - match: '\n'
      scope: punctuation.terminator.statement.python

  comments:
    - match: '#.*$'
      scope: comment.line.number-sign.python

  strings:
    - match: '"""'
      scope: punctuation.definition.string.begin.python
      push:
        - meta_scope: string.quoted.triple-double.python
        - match: '"""'
          scope: punctuation.definition.string.end.python
          pop: true
        - match: '\\\\.'
          scope: constant.character.escape.python
    - match: "'''"
      scope: punctuation.definition.string.begin.python
      push:
        - meta_scope: string.quoted.triple-single.python
        - match: "'''"
          scope: punctuation.definition.string.end.python
          pop: true
        - match: '\\\\.'
          scope: constant.character.escape.python
    - match: '"'
      scope: punctuation.definition.string.begin.python
      push:
        - meta_scope: string.quoted.double.python
        - match: '"'
          scope: punctuation.definition.string.end.python
          pop: true
        - match: '\\\\.'
          scope: constant.character.escape.python
    - match: "'"
      scope: punctuation.definition.string.begin.python
      push:
        - meta_scope: string.quoted.single.python
        - match: "'"
          scope: punctuation.definition.string.end.python
          pop: true
        - match: '\\\\.'
          scope: constant.character.escape.python

  keywords:
    - match: '\b(def|class|if|else|elif|for|while|try|except|finally|with|as|return|import|from|pass|break|continue|raise|lambda|yield|assert|del|global|nonlocal|True|False|None)\b'
      scope: keyword.control.python

  functions:
    - match: '\bdef\s+([A-Za-z_][A-Za-z0-9_]*)'
      captures:
        1: entity.name.function.python
      scope: keyword.control.def.python
      push:
        - meta_scope: meta.function.python
        - match: ':'
          scope: punctuation.separator.definition.function.python
          pop: true

  classes:
    - match: '\bclass\s+([A-Za-z_][A-Za-z0-9_]*)'
      captures:
        1: entity.name.class.python
      scope: keyword.control.class.python
      push:
        - meta_scope: meta.class.python
        - match: ':'
          scope: punctuation.separator.definition.class.python
          pop: true

  numbers:
    - match: '\b\d+\.\d+\b'
      scope: constant.numeric.float.python
    - match: '\b\d+\b'
      scope: constant.numeric.integer.python

  operators:
    - match: '[=+\-*/%<>!&|^~]+'
      scope: keyword.operator.python
