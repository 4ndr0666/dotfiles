#!/bin/zsh/

#File: /home/$USER/.zshrc
#Author: 4ndr0666
#Edited: 04-10-2024
#
# --- // 4NDR0666_ZSHRC // ========


# --- // ALT_THEME:
#autoload -U colors && colors   # Load colors
#PS1="%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M %{$fg[magenta]%}%~%{$fg[red]%}]%{$reset_color%}$%b "
#
# --- // OMZ_THEME:
#ZSH_THEME="jonathan"
#ZSH_THEME_RANDOM_CANDIDATES=( "darkblood" "duellj" "fox" "funky" "humza" "jonathan" "junkfood" "kiwi" "rkj-repos" "simonoff" "robbyrussell" )
#ZSH_THEME_RANDOM_IGNORED=( "kardan" "minimal" "pygmalion" "tjkirch_mod" ) # Added quotes for consistency
#
# --- // OMZ_PLUGINS:
#plugins=( systemadmin zsh-interactive-cd universalarchive git zsh-autosuggestions zsh-syntax-highlighting fzf aliases copypath myfunctions systemd )
#
# --- // OMZ_SOURCING:
#[[ -f "$HOME/.oh-my-zsh/oh-my-zsh.sh" ]] && source "$HOME/.oh-my-zsh/oh-my-zsh.sh"

# --- // POWERLEVEL10k:
[[ -f  "/usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme" ]] && source "/usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme"

# --- // AUTOSET_$DISPLAY_IF_NOT_SET:
if [ -z "$DISPLAY" ]; then
	if which loginctl &>/dev/null; then
		LOGINCTL_SESSION=$(loginctl show-user $USER -p Display 2>/dev/null | cut -d= -f2)
		if [ -n "$LOGINCTL_SESSION" ]; then
			export DISPLAY=$(loginctl show-session $LOGINCTL_SESSION -p Display | cut -d= -f2)
		fi
	fi
	if which ck-list-sessions &>/dev/null; then
		eval `ck-list-sessions | awk "/^Session/{right=0} /unix-user = '$UID'/{right=1} /x11-display = '(.+)'/{ if(right == 1) printf(\"DISPLAY=%s\n\", \\\$3); }";`
	fi
fi

# --- // SWITCH_TO_HOME:
#if [ "$PWD" = "/" ]; then
#    cd $HOME
#fi

# --- // PATH:
export PATH="$PATH:$(find ~/.local/bin /usr/local/bin -type d | paste -sd ':' -)"

# --- // UNSET_DUPLICATES:
typeset -U path PATH cdpath CDPATH fpath FPATH manpath MANPATH

# --- // SOURCE_SHELLZ:
source ~/.config/shellz/zenvironment 2>/dev/null
source ~/.config/shellz/aliasrc 2>/dev/null
source ~/.config/shellz/functions/functions.zsh 2>/dev/null

# --- // ON-DEMAND_REHASH:
zshcache_time="$(date +%s%N)"
autoload -Uz add-zsh-hook
rehash_precmd() {
  if [[ -a /var/cache/zsh/pacman ]]; then
    local paccache_time="$(date -r /var/cache/zsh/pacman +%s%N)"
    if (( zshcache_time < paccache_time )); then
      rehash
      zshcache_time="$paccache_time"
    fi
  fi
}
add-zsh-hook -Uz precmd rehash_precmd

# --- // MINOR_ALIASES
alias restartwaybar="pkill waybar && bash $HOME/.config/wayfire/scripts/statusbar &"
alias reload="source ~/.zshrc"
alias oz="vim ~/.zshrc"

## --- // POWERLEVEL10k:
[[ ! -f ~/.config/shellz/.p10k.zsh ]] || source ~/.config/shellz/.p10k.zsh
